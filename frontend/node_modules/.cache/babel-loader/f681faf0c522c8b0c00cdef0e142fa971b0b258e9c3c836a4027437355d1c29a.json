{"ast":null,"code":"import axios from \"axios\";\nimport API_URL from \"./backendConfig\";\nimport authHeader from \"./auth-header\";\nimport authService from \"./auth.service\";\nconst user = authService.getCurrentUser();\nconst getSongDetail = songID => {\n  return axios.get(API_URL + \"song/\" + songID);\n};\nconst getMyReview = songID => {\n  return axios.post(API_URL + \"song/getMyReview\", {\n    username: user.username,\n    song_id: songID\n  }, {\n    headers: authHeader()\n  });\n};\nconst getMyRating = songID => {\n  return axios.post(API_URL + \"song/getMyRating\", {\n    username: user.username,\n    song_id: songID\n  }, {\n    headers: authHeader()\n  });\n};\nconst postSongRate = (songID, rate) => {\n  return axios.post(API_URL + \"friend/friendRequest\", {\n    username: user.username,\n    song_id: songID,\n    star: rate\n  }, {\n    headers: authHeader()\n  });\n};\nconst postSongReview = (songID, review) => {\n  return axios.post(API_URL + \"friend/friendRequest\", {\n    username: user.username,\n    song_id: songID,\n    star: rate\n  }, {\n    headers: authHeader()\n  });\n};\nconst songService = {\n  getSongDetail,\n  getMyReview,\n  getMyRating,\n  postSongRate\n};\nexport default songService;","map":{"version":3,"names":["axios","API_URL","authHeader","authService","user","getCurrentUser","getSongDetail","songID","get","getMyReview","post","username","song_id","headers","getMyRating","postSongRate","rate","star","postSongReview","review","songService"],"sources":["C:/nyu/2023spring/database/fatear/fatear/src/services/songService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport API_URL from \"./backendConfig\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nimport authService from \"./auth.service\";\r\n\r\nconst user = authService.getCurrentUser()\r\n\r\nconst getSongDetail = (songID) => {\r\n    return axios.get(API_URL + \"song/\" + songID )\r\n};\r\nconst getMyReview = (songID) => {\r\n    return axios.post(API_URL + \"song/getMyReview\", {username: user.username, song_id: songID}, {headers: authHeader()})\r\n};\r\n\r\nconst getMyRating = (songID) => {\r\n    return axios.post(API_URL + \"song/getMyRating\", {username: user.username, song_id: songID}, {headers: authHeader()})\r\n};\r\n\r\nconst postSongRate = (songID, rate) => {\r\n    return axios.post(API_URL + \"friend/friendRequest\", {username: user.username, song_id: songID, star: rate}, {headers: authHeader()})\r\n};\r\n\r\nconst postSongReview = (songID, review) => {\r\n    return axios.post(API_URL + \"friend/friendRequest\", {username: user.username, song_id: songID, star: rate}, {headers: authHeader()})\r\n};\r\n\r\nconst\r\n    songService = {\r\n        getSongDetail,\r\n\r\n        getMyReview,\r\n        getMyRating,\r\n\r\n\r\n        postSongRate,\r\n    };\r\n\r\nexport default songService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,UAAU,MAAM,eAAe;AAEtC,OAAOC,WAAW,MAAM,gBAAgB;AAExC,MAAMC,IAAI,GAAGD,WAAW,CAACE,cAAc,EAAE;AAEzC,MAAMC,aAAa,GAAIC,MAAM,IAAK;EAC9B,OAAOP,KAAK,CAACQ,GAAG,CAACP,OAAO,GAAG,OAAO,GAAGM,MAAM,CAAE;AACjD,CAAC;AACD,MAAME,WAAW,GAAIF,MAAM,IAAK;EAC5B,OAAOP,KAAK,CAACU,IAAI,CAACT,OAAO,GAAG,kBAAkB,EAAE;IAACU,QAAQ,EAAEP,IAAI,CAACO,QAAQ;IAAEC,OAAO,EAAEL;EAAM,CAAC,EAAE;IAACM,OAAO,EAAEX,UAAU;EAAE,CAAC,CAAC;AACxH,CAAC;AAED,MAAMY,WAAW,GAAIP,MAAM,IAAK;EAC5B,OAAOP,KAAK,CAACU,IAAI,CAACT,OAAO,GAAG,kBAAkB,EAAE;IAACU,QAAQ,EAAEP,IAAI,CAACO,QAAQ;IAAEC,OAAO,EAAEL;EAAM,CAAC,EAAE;IAACM,OAAO,EAAEX,UAAU;EAAE,CAAC,CAAC;AACxH,CAAC;AAED,MAAMa,YAAY,GAAGA,CAACR,MAAM,EAAES,IAAI,KAAK;EACnC,OAAOhB,KAAK,CAACU,IAAI,CAACT,OAAO,GAAG,sBAAsB,EAAE;IAACU,QAAQ,EAAEP,IAAI,CAACO,QAAQ;IAAEC,OAAO,EAAEL,MAAM;IAAEU,IAAI,EAAED;EAAI,CAAC,EAAE;IAACH,OAAO,EAAEX,UAAU;EAAE,CAAC,CAAC;AACxI,CAAC;AAED,MAAMgB,cAAc,GAAGA,CAACX,MAAM,EAAEY,MAAM,KAAK;EACvC,OAAOnB,KAAK,CAACU,IAAI,CAACT,OAAO,GAAG,sBAAsB,EAAE;IAACU,QAAQ,EAAEP,IAAI,CAACO,QAAQ;IAAEC,OAAO,EAAEL,MAAM;IAAEU,IAAI,EAAED;EAAI,CAAC,EAAE;IAACH,OAAO,EAAEX,UAAU;EAAE,CAAC,CAAC;AACxI,CAAC;AAED,MACIkB,WAAW,GAAG;EACVd,aAAa;EAEbG,WAAW;EACXK,WAAW;EAGXC;AACJ,CAAC;AAEL,eAAeK,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}