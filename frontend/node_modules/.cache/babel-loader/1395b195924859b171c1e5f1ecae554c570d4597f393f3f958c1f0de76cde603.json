{"ast":null,"code":"import axios from \"axios\";\nimport API_URL from \"./backendConfig\";\nimport authHeader from \"./auth-header\";\nimport authService from \"./auth.service\";\nconst user = authService.getCurrentUser();\nconst getSongDetail = songID => {\n  return axios.get(API_URL + \"song/\" + songID);\n};\nconst getRequestsTo = () => {\n  return axios.post(API_URL + \"song/get\", {\n    username: user.username\n  }, {\n    headers: authHeader()\n  });\n};\nconst getRequestsBy = () => {\n  return axios.post(API_URL + \"friend/getRequestsBy\", {\n    username: user.username\n  }, {\n    headers: authHeader()\n  });\n};\nconst newFriendRequest = username => {\n  return axios.post(API_URL + \"friend/friendRequest\", {\n    user1: user.username,\n    user2: username\n  }, {\n    headers: authHeader()\n  });\n};\nconst songService = {\n  getSongDetail,\n  getRequestsTo,\n  getRequestsBy,\n  newFriendRequest\n};\nexport default songService;","map":{"version":3,"names":["axios","API_URL","authHeader","authService","user","getCurrentUser","getSongDetail","songID","get","getRequestsTo","post","username","headers","getRequestsBy","newFriendRequest","user1","user2","songService"],"sources":["C:/nyu/2023spring/database/fatear/fatear/src/services/songService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport API_URL from \"./backendConfig\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nimport authService from \"./auth.service\";\r\n\r\nconst user = authService.getCurrentUser()\r\n\r\nconst getSongDetail = (songID) => {\r\n    return axios.get(API_URL + \"song/\" + songID )\r\n};\r\nconst getRequestsTo = () => {\r\n    return axios.post(API_URL + \"song/get\", {username: user.username}, {headers: authHeader()})\r\n};\r\n\r\nconst getRequestsBy = () => {\r\n    return axios.post(API_URL + \"friend/getRequestsBy\", {username: user.username}, {headers: authHeader()})\r\n};\r\nconst newFriendRequest = (username) => {\r\n    return axios.post(API_URL + \"friend/friendRequest\", {user1: user.username, user2: username}, {headers: authHeader()})\r\n};\r\n\r\n\r\nconst\r\n    songService = {\r\n        getSongDetail,\r\n\r\n        getRequestsTo,\r\n        getRequestsBy,\r\n        newFriendRequest,\r\n\r\n\r\n\r\n    };\r\n\r\nexport default songService;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,UAAU,MAAM,eAAe;AAEtC,OAAOC,WAAW,MAAM,gBAAgB;AAExC,MAAMC,IAAI,GAAGD,WAAW,CAACE,cAAc,EAAE;AAEzC,MAAMC,aAAa,GAAIC,MAAM,IAAK;EAC9B,OAAOP,KAAK,CAACQ,GAAG,CAACP,OAAO,GAAG,OAAO,GAAGM,MAAM,CAAE;AACjD,CAAC;AACD,MAAME,aAAa,GAAGA,CAAA,KAAM;EACxB,OAAOT,KAAK,CAACU,IAAI,CAACT,OAAO,GAAG,UAAU,EAAE;IAACU,QAAQ,EAAEP,IAAI,CAACO;EAAQ,CAAC,EAAE;IAACC,OAAO,EAAEV,UAAU;EAAE,CAAC,CAAC;AAC/F,CAAC;AAED,MAAMW,aAAa,GAAGA,CAAA,KAAM;EACxB,OAAOb,KAAK,CAACU,IAAI,CAACT,OAAO,GAAG,sBAAsB,EAAE;IAACU,QAAQ,EAAEP,IAAI,CAACO;EAAQ,CAAC,EAAE;IAACC,OAAO,EAAEV,UAAU;EAAE,CAAC,CAAC;AAC3G,CAAC;AACD,MAAMY,gBAAgB,GAAIH,QAAQ,IAAK;EACnC,OAAOX,KAAK,CAACU,IAAI,CAACT,OAAO,GAAG,sBAAsB,EAAE;IAACc,KAAK,EAAEX,IAAI,CAACO,QAAQ;IAAEK,KAAK,EAAEL;EAAQ,CAAC,EAAE;IAACC,OAAO,EAAEV,UAAU;EAAE,CAAC,CAAC;AACzH,CAAC;AAGD,MACIe,WAAW,GAAG;EACVX,aAAa;EAEbG,aAAa;EACbI,aAAa;EACbC;AAIJ,CAAC;AAEL,eAAeG,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}